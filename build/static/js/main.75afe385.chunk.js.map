{"version":3,"sources":["components/redux/TaskList-reducer.js","components/Task/TaskOnHook.js","components/TaskList/TaskList.js","components/TaskList/TaskListContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.js","components/Footer/filters/filters.jsx","components/Footer/footer.jsx","components/Footer/FooterContainer.js","App.js","components/redux/redux-store.js","index.js"],"names":["TYPE_DELETE_TASK","TYPE_ONLABEL_CLICK","TYPE_CLEAR_COMPLETED_ITEMS","TYPE_ADD_TASK","TYPE_EDIT_TASK","TYPE_CHANGE_TIME_TASK","initialState","tasks","text","time","Date","now","id","uuidv4","completed","dateNow","min","sec","itemsLeft","taskListReducer","state","action","stateCopy","type","Number","isNaN","newTask","push","filter","item","length","task","newTasks","map","checkbox","itemId","formatDistanceToNowStrict","addSuffix","HookTask","props","interval","onDeleteItem","onEditItem","onLabelClicked","onChangeTime","useState","editMode","setEditMode","itemText","setItemText","timerSwitch","setTimerSwitch","seconds","setSeconds","minutes","setMinutes","useEffect","countDate","setInterval","distance","minutesCount","Math","floor","secondsCount","clearInterval","updateTimer","timerID","className","defaultChecked","onClick","role","placeholder","onKeyPress","el","key","onChange","currentTarget","value","TaskOnHook","TaskList","elements","exact","path","render","elementsAll","compose","connect","dispatch","editItemAC","labelClickAC","Header","handleKeyPress","inputnewItem","useRef","inputMin","inputSec","current","focus","keyPress","ref","HeaderContainer","AddItemAC","Filters","to","Footer","clearCompleted","FooterContainer","App","reducers","combineReducers","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.75afe385.chunk.js","sourcesContent":["import {formatDistanceToNowStrict} from 'date-fns';\nimport {v4 as uuidv4} from 'uuid';\n\nconst TYPE_DELETE_TASK = 'DELETE-TASK';\nconst TYPE_ONLABEL_CLICK = 'ONLABEL-CLICK';\nconst TYPE_CLEAR_COMPLETED_ITEMS = 'CLEAR-COMPLETED-ITEMS';\nconst TYPE_ADD_TASK = 'ADD-TASK';\nconst TYPE_EDIT_TASK = 'EDIT-TASK';\nconst TYPE_CHANGE_TIME_TASK = 'TYPE_CHANGE_TIME_TASK';\nconst TYPE_TIMER = 'TYPE_TIMER';\n\nconst initialState = {\n    tasks: [\n        {\n            text: 'Completed task',\n            time: Date.now(),\n            id: uuidv4(),\n            completed: '',\n            dateNow: null,\n            min: 0,\n            sec: 10\n        },\n        {\n            text: 'Editing task',\n            time: Date.now(),\n            id: uuidv4(),\n            completed: '',\n            dateNow: null,\n            min: 5,\n            sec: 10\n        },\n        {\n            text: 'Active task',\n            time: Date.now(),\n            id: uuidv4(),\n            completed: '',\n            dateNow: null,\n            min: 5,\n            sec: 10\n        },\n    ],\n    itemsLeft: 3,\n};\nconst taskListReducer = (state = initialState, action) => {\n    const stateCopy = {...state};\n    const {tasks} = state;\n    switch (action.type) {\n        case TYPE_ADD_TASK: {\n            const id = uuidv4();\n            let {min, sec} = action;\n            min = Number(min);\n            sec = Number(sec);\n\n            // eslint-disable-next-line no-restricted-globals\n            if (isNaN(min) || isNaN(sec)) {\n                min = 0;\n                sec = 0;\n            }\n\n            const newTask = {\n                text: action.text,\n                id,\n                completed: '',\n                time: Date.now(),\n                dateNow: null,\n                min,\n                sec,\n            };\n            stateCopy.tasks = [...tasks];\n            stateCopy.tasks.push(newTask);\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed !== ' completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n            };\n        }\n        case TYPE_DELETE_TASK: {\n            const newTask = tasks.filter((item) => item.id !== action.task.id);\n            stateCopy.tasks = [...newTask];\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed !== ' completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n            };\n        }\n        case TYPE_ONLABEL_CLICK: {\n            const newTasks = stateCopy.tasks.map((item) => {\n                    if ((item.id === action.task.id) && (action.task.completed === '')) {\n                        return {...item, completed: 'completed', checkbox: true}\n                    }\n                    if ((item.id === action.task.id) && (action.task.completed === 'completed')) {\n                        return {...item, completed: '', checkbox: false}\n                    }\n                    return item\n                }\n            );\n            stateCopy.tasks = [...newTasks];\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed !== 'completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n            };\n        }\n        case TYPE_CLEAR_COMPLETED_ITEMS: {\n            const newTasks = tasks.filter((item) => item.completed !== ' completed');\n            stateCopy.tasks = [...newTasks];\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: stateCopy.tasks.length,\n            };\n        }\n        case TYPE_EDIT_TASK: {\n            const newTasks = stateCopy.tasks.map((item) => {\n                    if (item.id === action.itemId) {\n                        return {...item, text: action.text}\n                    }\n                    return item\n                }\n            );\n            stateCopy.tasks = [...newTasks];\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: stateCopy.tasks.length,\n            };\n        }\n        case TYPE_CHANGE_TIME_TASK: {\n            const newTasks = tasks.map((item) =>\n                item.time ? {...item, dateNow: formatDistanceToNowStrict(item.time, {addSuffix: true})} : item\n            );\n            stateCopy.tasks = [...newTasks];\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: stateCopy.tasks.length,\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport const deleteItemAC = (task) => ({task, type: TYPE_DELETE_TASK});\nexport const changeTimeAC = () => ({type: TYPE_CHANGE_TIME_TASK});\nexport const labelClickAC = (task, checkbox) => ({task, checkbox, type: TYPE_ONLABEL_CLICK});\nexport const clearCompletedAC = (tasks) => ({tasks, type: TYPE_CLEAR_COMPLETED_ITEMS});\nexport const AddItemAC = (text, min, sec) => ({text, min, sec, type: TYPE_ADD_TASK});\nexport const editItemAC = (text, itemId) => ({text, itemId, type: TYPE_EDIT_TASK});\nexport const playTimerAC = (min, sec) => ({min, sec, type: TYPE_TIMER})\nexport default taskListReducer;\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst TaskOnHook = (props) => (<HookTask {...props}/>)\r\n\r\nconst HookTask = (props) => {\r\n\r\n    const {onDeleteItem, item, onEditItem, onLabelClicked, onChangeTime} = props;\r\n    const {completed, id, time, dateNow, text, checkbox, min, sec} = item;\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [itemText, setItemText] = useState('')\r\n\r\n    const [timerSwitch, setTimerSwitch] = useState(false)\r\n    const [seconds, setSeconds] = useState(sec);\r\n    const [minutes, setMinutes] = useState(min);\r\n\r\n    let interval;\r\n    const updateTimer = () => {\r\n        const countDate = minutes * 60000 + seconds * 1000;\r\n        interval = setInterval(() => {\r\n            const now = 1000;\r\n            const distance = countDate - now;\r\n            const minutesCount = Math.floor(distance / (1000 * 60))\r\n            const secondsCount = Math.floor((distance % (1000 * 60)) / 1000)\r\n            if (distance < 0) {\r\n                onLabelClicked(item, checkbox)\r\n                clearInterval(interval)\r\n            } else {\r\n                setMinutes(minutesCount)\r\n                setSeconds(secondsCount)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timerSwitch) {\r\n            if (!checkbox) {\r\n                updateTimer()\r\n            }\r\n        }\r\n        return () => clearInterval(interval);\r\n    })\r\n    const deactivateEditMode = (el) => {\r\n        if (el.key === 'Enter') {\r\n            setEditMode(false)\r\n            onEditItem(itemText, id);\r\n        }\r\n    };\r\n    const onTextChange = (el) => {\r\n        setItemText(el.currentTarget.value);\r\n    };\r\n    const tick = () => {\r\n        onChangeTime(time)\r\n    }\r\n    useEffect(() => {\r\n        const timerID = setInterval(() => tick(), 5000);\r\n        return () => clearInterval(timerID);\r\n    })\r\n\r\n    return (\r\n        <li className={completed} key={id}>\r\n            {!editMode && (\r\n                <div className=\"view\">\r\n                    {!checkbox && (\r\n                        <div>\r\n                            <input className=\"toggle\" type=\"checkbox\" defaultChecked={false}\r\n                                   onClick={() => {\r\n                                       onLabelClicked(item, checkbox)\r\n                                   }}/>\r\n                            <label>\r\n                                <span className=\"description\" role=\"presentation\"\r\n                                      onClick={() => {\r\n                                          onLabelClicked(item, checkbox)\r\n                                      }}>\r\n                                    {text}\r\n                                </span>\r\n                                <span className=\"timer-description\">\r\n                                    <button className=\"icon icon-play\" type='button' aria-label=\"play-btn\"\r\n                                            onClick={() => {\r\n                                                setTimerSwitch(true)\r\n                                            }}/>\r\n                                    <button className=\"icon icon-pause\" type='button' aria-label=\"pause-btn\"\r\n                                            onClick={() => {\r\n                                                setTimerSwitch(false)\r\n                                            }}/>\r\n                                    {minutes}:{seconds}\r\n                                </span>\r\n                                <span className=\"created\">created {dateNow}</span>\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                    {checkbox && (\r\n                        <div>\r\n                            <input className=\"toggle\" type=\"checkbox\" defaultChecked\r\n                                   onClick={() => {\r\n                                       onLabelClicked(item, checkbox)\r\n                                   }}/>\r\n                            <label>\r\n\t\t\t\t\t\t\t\t\t<span className=\"description\" role=\"presentation\"\r\n                                          onClick={() => {\r\n                                              onLabelClicked(item, checkbox)\r\n                                          }}>\r\n\t\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                <span className=\"description\">\r\n                                    <div>\r\n                                        <button className=\"icon icon-play\" type='button' aria-label=\"icon-play\"/>\r\n                                        <button className=\"icon icon-pause\" type='button' aria-label=\"icon-pause\"/>\r\n                                    </div>\r\n                                    <div>\r\n                                         {minutes}:{seconds}\r\n                                    </div>\r\n                                </span>\r\n                                <span className=\"created\">created {dateNow}</span>\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                    <div>\r\n                        <button type=\"button\" className=\"icon icon-edit\" onClick={() => setEditMode(true)}\r\n                                aria-label=\"edit-btn\"/>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\" className=\"icon icon-destroy\"\r\n                        onClick={() => {\r\n                            onDeleteItem(item);\r\n                        }} aria-label=\"destroy-btn\"\r\n                    />\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        className=\"new-todo\" placeholder=\"Edit your message\"\r\n                        onKeyPress={deactivateEditMode} onChange={onTextChange}\r\n                    />\r\n                </div>\r\n            )}\r\n        </li>\r\n    )\r\n}\r\nHookTask.propTypes = {\r\n    onEditItem: PropTypes.func.isRequired,\r\n    onDeleteItem: PropTypes.func.isRequired,\r\n    onLabelClicked: PropTypes.func.isRequired,\r\n    onChangeTime: PropTypes.func.isRequired,\r\n    item: PropTypes.instanceOf(Object).isRequired,\r\n};\r\nexport default TaskOnHook;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route} from 'react-router-dom';\nimport TaskOnHook from \"../Task/TaskOnHook\";\n\nconst TaskList = (props) => {\n    const {tasks} = props;\n    const elements = tasks.map((item) =>\n        item.completed !== ' completed' ? (\n            <Route\n                exact path=\"/active\" render={() => (<TaskOnHook key={item.id} item={item}{...props}/>)}\n            />\n        ) : (\n            <Route\n                exact path=\"/completed\" render={() => (<TaskOnHook key={item.id} item={item}{...props}/>)}\n            />\n        )\n    );\n    const elementsAll = tasks.map((item) => (\n        <Route\n            exact path=\"/all\" render={() => (<TaskOnHook key={item.id}item={item}{...props}/>)}\n        />\n    ));\n    return (\n        <ul className=\"todo-list\">\n            {elementsAll}\n            {elements}\n        </ul>\n    );\n};\n\nTaskList.propTypes = {\n    tasks: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default TaskList;\n","import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {changeTimeAC, deleteItemAC, editItemAC, labelClickAC} from '../redux/TaskList-reducer';\nimport TaskList from './TaskList';\n\nconst TaskListContainer = (props) => <TaskList {...props} />;\n\nconst mapStateToProps = (state) => ({\n    tasks: state.taskListReducer.tasks,\n    itemsLeft: state.taskListReducer.itemsLeft,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onEditItem: (action, itemId) => {\n        dispatch(editItemAC(action, itemId));\n    },\n    onDeleteItem: (action) => {\n        dispatch(deleteItemAC(action));\n    },\n    onLabelClicked: (action, checkbox) => {\n        dispatch(labelClickAC(action, checkbox));\n    },\n    onChangeTime: (action) => {\n        dispatch(changeTimeAC(action));\n    },\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(TaskListContainer);\n","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n    const {handleKeyPress} = props;\n    const inputnewItem = useRef(null);\n    const inputMin = useRef(null);\n    const inputSec = useRef(null);\n    useEffect(() => {\n        inputnewItem.current.focus();\n    })\n    // useImperativeHandle()\n    const keyPress = (el) => {\n        if (el.key === 'Enter') {\n            const text = inputnewItem.current.value;\n            const min = inputMin.current.value;\n            const sec = inputSec.current.value;\n            handleKeyPress(text, min, sec)\n            inputnewItem.current.value = '';\n            inputMin.current.value = '';\n            inputSec.current.value = '';\n        }\n    }\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <div className='header-container'>\n                <input className=\"new-todo\" placeholder=\"What needs to be done?\"\n                       ref={inputnewItem} onKeyPress={keyPress}/>\n                <input type=\"text\" placeholder=\"min\"\n                       className=\"new-todo-form__timer\" onKeyPress={keyPress} ref={inputMin}/>\n                <input type=\"text\" placeholder=\"sec\"\n                       className=\"new-todo-form__timer\" onKeyPress={keyPress} ref={inputSec}/>\n            </div>\n        </header>\n    );\n};\nHeader.propTypes = {\n    handleKeyPress: PropTypes.func.isRequired,\n};\nexport default Header;\n","import {connect} from 'react-redux';\nimport Header from './header';\nimport {AddItemAC} from '../redux/TaskList-reducer';\n\nconst mapStateToProps = (state) => ({\n    tasks: state.taskListReducer.tasks,\n    itemsLeft: state.taskListReducer.itemsLeft,\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleKeyPress: (text, min, sec) => {\n        dispatch(AddItemAC(text, min, sec));\n    },\n});\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Filters = () => (\n\t<ul className=\"filters\">\n\t\t<NavLink exact to=\"/all\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">\n\t\t\t\t\tAll\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/active\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">active</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/completed\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">completed</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t</ul>\n);\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './filters/filters';\n\nconst Footer = (props) => {\n\tconst { itemsLeft, clearCompleted } = props;\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span className=\"todo-count\">{itemsLeft} items left</span>\n\t\t\t<Filters />\n\t\t\t<button className=\"clear-completed\" onClick={clearCompleted} type=\"button\">\n\t\t\t\tClear completed\n\t\t\t</button>\n\t\t</footer>\n\t);\n};\nFooter.propTypes = {\n\tclearCompleted: PropTypes.func.isRequired,\n\titemsLeft: PropTypes.number.isRequired,\n};\nexport default Footer;\n","import { connect } from 'react-redux';\nimport Footer from './footer';\nimport { clearCompletedAC } from '../redux/TaskList-reducer';\n\nconst mapStateToProps = (state) => ({\n\titemsLeft: state.taskListReducer.itemsLeft,\n});\nconst mapDispatchToProps = (dispatch) => ({\n\tclearCompleted: () => {\n\t\tdispatch(clearCompletedAC());\n\t},\n});\nconst FooterContainer = connect(mapStateToProps, mapDispatchToProps)(Footer);\nexport default FooterContainer;\n","import React from 'react';\nimport TaskListContainer from './components/TaskList/TaskListContainer';\nimport HeaderContainer from './components/Header/headerContainer';\nimport FooterContainer from './components/Footer/FooterContainer';\n\nconst App = () => (\n\t<section className=\"todoapp\">\n\t\t<HeaderContainer />\n\t\t<section className=\"main\">\n\t\t\t<TaskListContainer />\n\t\t\t<FooterContainer />\n\t\t</section>\n\t</section>\n);\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport taskListReducer from './TaskList-reducer';\n\nconst reducers = combineReducers({\n\ttaskListReducer,\n});\n\nconst store = createStore(reducers);\nwindow.store = store;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport store from './components/redux/redux-store';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}